{"remainingRequest":"/Users/proudsmart006/Desktop/workPlace/vue3.0-quickStart/node_modules/babel-loader/lib/index.js!/Users/proudsmart006/Desktop/workPlace/vue3.0-quickStart/src/router/index.js","dependencies":[{"path":"/Users/proudsmart006/Desktop/workPlace/vue3.0-quickStart/src/router/index.js","mtime":1604043675912},{"path":"/Users/proudsmart006/Desktop/workPlace/vue3.0-quickStart/node_modules/cache-loader/dist/cjs.js","mtime":1603788265128},{"path":"/Users/proudsmart006/Desktop/workPlace/vue3.0-quickStart/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nVue.use(Router);\nvar router = new Router({\n  // mode:'history',\n  routes: [{\n    path: '/',\n    name: 'index',\n    meta: {\n      title: 'herox',\n      auth: false,\n      //需要登录\n      keepAlive: false\n    },\n    component: function component(resolve) {\n      return require(['@/views/index.vue'], resolve);\n    }\n  }, {\n    path: '/test',\n    name: 'test',\n    meta: {\n      title: 'herox',\n      auth: true,\n      //需要登录\n      keepAlive: false\n    },\n    component: function component(resolve) {\n      return require(['@/views/test.vue'], resolve);\n    }\n  }]\n});\n/**\n * 路由前置检查\n */\n\nrouter.beforeEach(function (to, from, next) {\n  // 合法性校验\n  if (to.meta.auth) {\n    console.log('into auth');\n    next();\n  }\n\n  next();\n});\nrouter.afterEach(function () {// 在即将进入新的页面组件前操作\n});\nexport default router;",{"version":3,"sources":["/Users/proudsmart006/Desktop/workPlace/vue3.0-quickStart/src/router/index.js"],"names":["Vue","Router","use","router","routes","path","name","meta","title","auth","keepAlive","component","require","resolve","beforeEach","to","from","next","console","log","afterEach"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACAD,IAAIE,GAAJ,CAAQD,MAAR;AACA,IAAME,SAAS,IAAIF,MAAJ,CAAW;AACtB;AACAG,UAAQ,CACJ;AACIC,UAAM,GADV;AAEIC,UAAM,OAFV;AAGIC,UAAM;AACFC,aAAO,OADL;AAEFC,YAAK,KAFH;AAES;AACXC,iBAAW;AAHT,KAHV;AAQIC,eAAU;AAAA,aAASC,QAAQ,CAAC,mBAAD,CAAR,EAA8BC,OAA9B,CAAT;AAAA;AARd,GADI,EAWJ;AACER,UAAM,OADR;AAEEC,UAAM,MAFR;AAGEC,UAAM;AACFC,aAAO,OADL;AAEFC,YAAK,IAFH;AAEQ;AACVC,iBAAW;AAHT,KAHR;AAQEC,eAAU;AAAA,aAASC,QAAQ,CAAC,kBAAD,CAAR,EAA6BC,OAA7B,CAAT;AAAA;AARZ,GAXI;AAFc,CAAX,CAAf;AAyBA;;;;AAGAV,OAAOW,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC;AACA,MAAIF,GAAGR,IAAH,CAAQE,IAAZ,EAAkB;AAChBS,YAAQC,GAAR,CAAY,WAAZ;AACAF;AACD;;AACDA;AACD,CAPD;AAQAd,OAAOiB,SAAP,CAAiB,YAAM,CACrB;AACD,CAFD;AAGA,eAAejB,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nVue.use(Router)\nconst router = new Router({\n    // mode:'history',\n    routes: [\n        {\n            path: '/',\n            name: 'index',\n            meta: {\n                title: 'herox',\n                auth:false,//需要登录\n                keepAlive: false\n            },\n            component:resolve=>require(['@/views/index.vue'],resolve)\n        },\n        {\n          path: '/test',\n          name: 'test',\n          meta: {\n              title: 'herox',\n              auth:true,//需要登录\n              keepAlive: false\n          },\n          component:resolve=>require(['@/views/test.vue'],resolve)\n      },\n    ]\n})\n/**\n * 路由前置检查\n */\nrouter.beforeEach((to, from, next) => {\n  // 合法性校验\n  if (to.meta.auth) {\n    console.log('into auth');\n    next();\n  }\n  next();\n});\nrouter.afterEach(() => {  \n  // 在即将进入新的页面组件前操作\n})\nexport default router;"]}]}